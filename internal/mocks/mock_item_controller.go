// Code generated by MockGen. DO NOT EDIT.
// Source: app/item/item_controller.go

// Package mock_item is a generated GoMock package.
package mock_item

import (
	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
	reflect "reflect"
)

// MockItemController is a mock of ItemController interface
type MockItemController struct {
	ctrl     *gomock.Controller
	recorder *MockItemControllerMockRecorder
}

// MockItemControllerMockRecorder is the mock recorder for MockItemController
type MockItemControllerMockRecorder struct {
	mock *MockItemController
}

// NewMockItemController creates a new mock instance
func NewMockItemController(ctrl *gomock.Controller) *MockItemController {
	mock := &MockItemController{ctrl: ctrl}
	mock.recorder = &MockItemControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockItemController) EXPECT() *MockItemControllerMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockItemController) Get(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockItemControllerMockRecorder) Get(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockItemController)(nil).Get), c)
}
