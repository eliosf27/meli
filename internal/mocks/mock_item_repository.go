// Code generated by MockGen. DO NOT EDIT.
// Source: app/item/item_repository.go

// Package mock_item is a generated GoMock package.
package mock_item

import (
	gomock "github.com/golang/mock/gomock"
	entities "meli/app/entities"
	reflect "reflect"
)

// MockItemRepository is a mock of ItemRepository interface
type MockItemRepository struct {
	ctrl     *gomock.Controller
	recorder *MockItemRepositoryMockRecorder
}

// MockItemRepositoryMockRecorder is the mock recorder for MockItemRepository
type MockItemRepositoryMockRecorder struct {
	mock *MockItemRepository
}

// NewMockItemRepository creates a new mock instance
func NewMockItemRepository(ctrl *gomock.Controller) *MockItemRepository {
	mock := &MockItemRepository{ctrl: ctrl}
	mock.recorder = &MockItemRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockItemRepository) EXPECT() *MockItemRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockItemRepository) Get(Id string) (entities.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", Id)
	ret0, _ := ret[0].(entities.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockItemRepositoryMockRecorder) Get(Id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockItemRepository)(nil).Get), Id)
}

// Save mocks base method
func (m *MockItemRepository) Save(item entities.Item) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", item)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockItemRepositoryMockRecorder) Save(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockItemRepository)(nil).Save), item)
}
