// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/metric/metric_handler.go

// Package mock_metric is a generated GoMock package.
package metric

import (
	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
	reflect "reflect"
)

// MockMetricHandler is a mock of MetricHandler interface
type MockMetricHandler struct {
	ctrl     *gomock.Controller
	recorder *MockMetricHandlerMockRecorder
}

// MockMetricHandlerMockRecorder is the mock recorder for MockMetricHandler
type MockMetricHandlerMockRecorder struct {
	mock *MockMetricHandler
}

// NewMockMetricHandler creates a new mock instance
func NewMockMetricHandler(ctrl *gomock.Controller) *MockMetricHandler {
	mock := &MockMetricHandler{ctrl: ctrl}
	mock.recorder = &MockMetricHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMetricHandler) EXPECT() *MockMetricHandlerMockRecorder {
	return m.recorder
}

// Health mocks base method
func (m *MockMetricHandler) Health(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Health", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Health indicates an expected call of Health
func (mr *MockMetricHandlerMockRecorder) Health(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Health", reflect.TypeOf((*MockMetricHandler)(nil).Health), c)
}
